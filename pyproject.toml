[tool.poetry]
name = "tg-parser"
version = "0.1.0"
description = ""
authors = ["Egor <egormeschenko@gmail.com>"]
readme = "README.md"
package-mode = false
[tool.poetry.dependencies]



# web runtime
greenlet = "^3.1.1"
uvicorn = "^0.29.0"
gunicorn = "^22.0.0"
fastapi = "^0.111.1"
pydantic = "^2.8.2"
celery = {version = "^5.4.0", extras = ["redis"]}
flower = "^2.0.1"
httpx = "^0.27.2"

# db
asyncpg = "^0.29.0"
alembic = "^1.13.2"
sqlalchemy = { extras = ["mypy"], version = "^2.0.31"}
aioredis = { version = "^2.0.1", extras = ["hiredis"]}
bcrypt = "^3.2.2"  # for jwt
pycryptodomex = "^3.20.0"  # for jwt
pyOpenSSL = "^24.1.0"  # for jwt
phpserialize = "^1.3"  # for jwt
PyJWT = "^2.8.0"  # for jwt

# dash
streamlit = "^1.36.0"
plotly = "^5.22.0"

# utils
python = "^3.12"
watchdog = "^4.0.1"
python-json-logger = "^2.0.7"
ujson = "^5.10.0"
pyyaml = "6.0.1"
aiohttp = "^3.9.5"
jinja2 = "^3.1.2"
python-dateutil = "^2.9.0"
disposable-email-domains = "^0.0.104"
telethon = "^1.36.0"
pytubefix = "^6.7.0"
beautifulsoup4 = "^4.13.4"
# lint
ruff = "^0.5.5"
vulture = "^2.11"

# tests
pytest = "^8.3.4"
mock = "^5.1.0"
pytest-freezegun = "^0.4.2"
pytest-cov = "^6.0.0"
covdefaults = "^2.3.0"
pytest-asyncio = "^0.25.0"
pytest-clarity = "^1.0.1"
pytest-randomly = "^3.16.0"
pytest-mock = "^3.14.0"
pytest-socket = "^0.7.0"
aioresponses = "^0.7.7"

# types
mypy = "^1.11.1"
pyright = "^1.1.373"
types-requests = "^2.32.0.20240523"
types-python-dateutil = "^2.9.0.20240316"
types-ujson = "^5.10.0.20240515"
types-mock = "^5.1.0.20240425"
types-pyOpenSSL = "^22.0.10"
celery-types = "^0.22.0"
asyncpg-stubs = "^0.29.1"
sentry-sdk = "^2.11.0"
pydantic-settings = "^2.4.0"
pytz = "2024.1"
types-pytz = "^2024.1.0.20240417"
setuptools = "^75.8.0"
html2text = "^2025.4.15"
pyperclip = "^1.9.0"
requests = "^2.32.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 160
indent-width = 4
target-version = "py310"
preview = true
exclude = ["src/db_main/alembic/", "scripts", ".venv", ".local", ".cache", "migration", ""]

[tool.ruff.lint]
preview = true
select = [
    "E", "F", "W", "C", "I", "N", "UP", "YTT", "ANN", "ASYNC", "ASYNC1", "B", "C4", "T10", "FA", "ISC", "ICN", "LOG", "G", "PIE", "T20", "PYI", "PT",
    "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TCH", "PTH", "TD", "PD", "PL", "FLY", "NPY", "PERF", "FURB", "RUF",
    # disabled forever:
    # "A", "COM", "CPY", "EM", "EXE", "INP","INT","ARG","FIX",
    # TODO: enable it
    #"S", "BLE", "DTZ", "ERA", "PGH", "TRY",
]
extend-unfixable = ["T201"]
ignore = [
    "N803", "N806", "N802", "N813", "N818", "N805", "N999", "UP038",
    "ANN401",
    "B008",
    "ISC001",
    "G004",

    "PT007", "PT005", "PT008",
    "Q003",
    "SIM102",
    "TCH003", "TCH002", "TCH001",
    "TD003", "TD002",
    "PLW1514",
    "PLR0917",
    "PLR0913",
    "PLR6301",
    "PLW2901",
    "PLC0415",
    "PLC0414",
    "PLC0105",
    "PLR0916",
    "PLR0914",
    "PLR0911",
    "PERF203",
    "PERF401",
    "FURB113",
    "RUF001",
    "RUF015",
    "RUF012",
    "PD901",

    # TODO: enable it
    "B904", "G202", "PT004", "PT006", "PT011", "PT020", "RET503", "SIM118", "SIM117", "SIM108", "SIM105",
    "PLR2004", "PLR0912", "RUF029", "RUF002", "RUF003",
]

[tool.ruff.format]
exclude = ["src/db_main/alembic/", "scripts", ".venv", ".local", ".cache", "migration", ""]
preview = true
quote-style = "preserve"
indent-style = "space"
line-ending = "auto"
docstring-code-format = false
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
# Do not perform function call `Depends` in argument defaults;
# Disabled because it's FastAPI Depency Injection method
"srv/*" = ["T201"]


[tool.vulture]
min_confidence = 80
exclude = ["tests/", "src/db_main/alembic/", "srv/", "external/docker.py"]
ignore_decorators = ["@api_key_v3_router", "@rpc", "@celery_app", "@router", "@users_v3_router", "@api_key_v3_router", "@auth_v3_router"]
paths = ["src/", "event_analytics/", "external/", "src/", "settings.py"]

[tool.pyright]
include = ['src']
exclude = ['src/db_main/alembic/']

[tool.coverage.run]
branch = true
plugins = ["covdefaults"]
omit = [
    "tests/*.py",
    "tests/**/*.py",
    "srv/*.py",
    "srv/**/*.py",
    "src/**/test_*.py",
    "src/app_dash/*.py",
    "src/app_dash/**/*.py",
    "src/db_main/alembic/**/*.py",
    "src/common/utils_dash/streamlit.py",
    "src/business_logic/events_tracker.py",
    "src/common/log.py",
]

[tool.pytest.ini_options]
python_functions = 'test_*'
python_files = [
    'test_*.py',
]
asyncio_mode = 'auto'
testpaths = [
    './src',
    './srv',
]

# Strict `@xfail` by default:
xfail_strict = true

# Extra options:
addopts = "--strict-markers --disable-socket --allow-unix-socket --allow-hosts=127.0.0.1,::1,echo.free.beeceptor.com -s -m 'not smoke' -p no:warnings"

# --dist loadfile -n auto

# https://pypi.org/project/pytest-timeout/
# Timeout for a single test in seconds:
timeout = 10


